


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             term_project, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         Main
    4 00000000         
    5 00000000 E3E0D003        MOV              SP, #0xFFFFFFFC
    6 00000004 E28F0FB2        ADR              R0, fliter
    7 00000008         
    8 00000008         
    9 00000008         ;r4 : index of convolution(from 480 to 5)
   10 00000008         ;r5 : pointer to base of sampled data
   11 00000008         ;r0 : float of sampled_data AND RESULT OF SUBROUTINES
   12 00000008         ;r1 : float of filter AND SUB-CONVOLUTION
   13 00000008         ;R6-R11 : FLOAT OF FILTERS
   14 00000008         
   15 00000008 E8900FC0        LDMIA            R0, {R6-R11}
   16 0000000C         
   17 0000000C         ; STMED SP!, {R6-R11} ;store reversed filter
   18 0000000C         ; MOV R4, SP
   19 0000000C E59F5A58        LDR              R5, =Sampled_Data ; save the da
                                                            ta(480) using Sampl
                                                            ed_Data label(32bit
                                                            , double word).'
   20 00000010 E3A04E1E        MOV              R4, #480
   21 00000014 E2444001        SUB              R4, R4, #1  ;GET 479 AT R4, #47
                                                            9 IS NOT EXPRESSED 
                                                            BY THE IMMEDIATE FO
                                                            RM
   22 00000018         
   23 00000018         forCONVOLUTION                       ;CONVOLUTION START
   24 00000018 E3540005        CMP              R4, #5
   25 0000001C BA00002C        BLT              forEndCONVOLUTION
   26 00000020         
   27 00000020         ;FILTER[0] * DATA[I]
   28 00000020 E7951104        LDR              R1, [R5, R4, LSL #2]
   29 00000024 E1A00006        MOV              R0, R6
   30 00000028 EB000039        BL               floatMul
   31 0000002C E1A0C000        MOV              R12, R0
   32 00000030         
   33 00000030         ;FILTER[1] * DATA[I-1]
   34 00000030 E2443001        SUB              R3, R4, #1
   35 00000034 E7951103        LDR              R1, [R5, R3, LSL #2]
   36 00000038 E1A00007        MOV              R0, R7
   37 0000003C EB000034        BL               floatMul
   38 00000040 E1A0100C        MOV              R1, R12
   39 00000044 EB000059        BL               floatAdd
   40 00000048 E1A0C000        MOV              R12, R0
   41 0000004C         
   42 0000004C         ;FILTER[2] * DATA[I-2]
   43 0000004C E2443002        SUB              R3, R4, #2
   44 00000050 E7951103        LDR              R1, [R5, R3, LSL #2]
   45 00000054 E1A00008        MOV              R0, R8
   46 00000058 EB00002D        BL               floatMul
   47 0000005C E1A0100C        MOV              R1, R12
   48 00000060 EB000052        BL               floatAdd
   49 00000064 E1A0C000        MOV              R12, R0
   50 00000068         
   51 00000068         ;FILTER[3] * DATA[I-3]
   52 00000068 E2443003        SUB              R3, R4, #3
   53 0000006C E7951103        LDR              R1, [R5, R3, LSL #2]



ARM Macro Assembler    Page 2 


   54 00000070 E1A00009        MOV              R0, R9
   55 00000074 EB000026        BL               floatMul
   56 00000078 E1A0100C        MOV              R1, R12
   57 0000007C EB00004B        BL               floatAdd
   58 00000080 E1A0C000        MOV              R12, R0
   59 00000084         
   60 00000084         ;FILTER[4] * DATA[I-4]
   61 00000084 E2443004        SUB              R3, R4, #4
   62 00000088 E7951103        LDR              R1, [R5, R3, LSL #2]
   63 0000008C E1A0000A        MOV              R0, R10
   64 00000090 EB00001F        BL               floatMul
   65 00000094 E1A0100C        MOV              R1, R12
   66 00000098 EB000044        BL               floatAdd
   67 0000009C E1A0C000        MOV              R12, R0
   68 000000A0         
   69 000000A0         ;FILTER[5] * DATA[I-5]
   70 000000A0 E2443005        SUB              R3, R4, #5
   71 000000A4 E7951103        LDR              R1, [R5, R3, LSL #2]
   72 000000A8 E1A0000B        MOV              R0, R11
   73 000000AC EB000018        BL               floatMul
   74 000000B0 E1A0100C        MOV              R1, R12
   75 000000B4 EB00003D        BL               floatAdd
   76 000000B8 E1A0C000        MOV              R12, R0
   77 000000BC         
   78 000000BC         ;R12 IS THE RESULT OF CONVOLUTION, AND LET'S CHECK IF IT
                       'S LOWER THAN OR EQUALS -4.7
   79 000000BC E59F104C        LDR              R1, FourPointSeven
   80 000000C0 EB00003A        BL               floatAdd    ;INSTEAD CONVOLUTIO
                                                            N - (-4.8), PERFORM
                                                             CONVOLTUTION + 4.7
                                                            
   81 000000C4 E3500000        CMP              R0, #0
   82 000000C8 D82D1010        STMEDLE          SP!, {R4, R12} ;IF THE CONVOLUT
                                                            ION IS LOWER THAN O
                                                            R EQUALS -4.8, STOR
                                                            E IT WITH ITS INDEX
                                                             TO STACK
   83 000000CC E2444001        SUB              R4, R4, #1
   84 000000D0 EAFFFFD0        B                forCONVOLUTION
   85 000000D4         forEndCONVOLUTION                    ;FINISH GETTING AND
                                                             STORING CONVOLUTIO
                                                            NS
   86 000000D4         
   87 000000D4         ;R6 : CURRENT INDEX AT STACK(TO GET ONLY DATA OR INDEX)
   88 000000D4         ;R7 : RESULT MEMORY AREA POINTER
   89 000000D4         ;R0 : DATA OR INDEX THAT WILL BE SOON STORED TO THE RESU
                       LT AREA OF MEMORY
   90 000000D4 E59F71F4        LDR              R7, Save_Result_Address ;
   91 000000D8 E1A0600D        MOV              R6, SP
   92 000000DC E2866008        ADD              R6, R6, #8  ;TO GET THE DATA'S 
                                                            POINTER
   93 000000E0         storeDATA
   94 000000E0 E5960000        LDR              R0, [R6]
   95 000000E4 E4870004        STR              R0, [R7], #4
   96 000000E8 E2966008        ADDS             R6, R6, #8
   97 000000EC 3AFFFFFB        BCC              storeDATA
   98 000000F0         ;data storing finished and start index storing
   99 000000F0 E1A0600D        MOV              R6, SP
  100 000000F4 E2866004        ADD              R6, R6, #4  ;TO GET THE INDEX'S



ARM Macro Assembler    Page 3 


                                                             POINTER
  101 000000F8         storeINDEX
  102 000000F8 E5960000        LDR              R0, [R6]
  103 000000FC E0C700B2        STRH             R0, [R7], #2
  104 00000100 E2966008        ADDS             R6, R6, #8
  105 00000104 3AFFFFFB        BCC              storeINDEX
  106 00000108         
  107 00000108 E3E0D003        MOV              SP, #0xFFFFFFFC ;FLUSH STACK
  108 0000010C         
  109 0000010C E3A0F000        mov              pc, #0      ; finish
  110 00000110         
  111 00000110 40966666 
                       FourPointSeven
                               DCD              0x40966666
  112 00000114         
  113 00000114         floatMul
  114 00000114         ;R0 : input 1 and return value
  115 00000114         ;R1 : input 2
  116 00000114         ;R2 : Aux of input 1
  117 00000114         ;R3 : Aux of input 2
  118 00000114         ;R4 : Aux of res
  119 00000114         ;R5 : Aux of subroutine
  120 00000114 E82D0030        STMED            SP!, {R4, R5} ;store  register 
                                                            that will be used
  121 00000118         ;check exceptoin : case R0 or R1 is 0
  122 00000118 E3E05102        MOV              R5, #0x7FFFFFFF
  123 0000011C E1100005        TST              R0, R5
  124 00000120 0A000020        BEQ              endFMul
  125 00000124 E1110005        TST              R1, R5
  126 00000128 01A00001        MOVEQ            R0, R1
  127 0000012C 0A00001D        BEQ              endFMul
  128 00000130         ;get multiplied mantissa at R4
  129 00000130 E3C024FF        BIC              R2, R0, #0xFF000000
  130 00000134 E3C134FF        BIC              R3, R1, #0xFF000000
  131 00000138 E3822502        ORR              R2, R2, #0x00800000
  132 0000013C E3833502        ORR              R3, R3, #0x00800000
  133 00000140 E0845392        UMULL            R5, R4, R2, R3
  134 00000144 E3140902        TST              R4, #0x00008000
  135 00000148 01A04484        LSLEQ            R4, R4, #9
  136 0000014C 01844BA5        ORREQ            R4, R5, LSR #23
  137 00000150 11A04404        LSLNE            R4, R4, #8
  138 00000154 11844C25        ORRNE            R4, R5, LSR #24
  139 00000158 E3C44502        BIC              R4, R4, #0x00800000
  140 0000015C         ;get sum of exponenet
  141 0000015C E59F5168        LDR              R5, exponentMask
  142 00000160 E3C02102        BIC              R2, R0, #0x80000000
  143 00000164 E3C13102        BIC              R3, R1, #0x80000000
  144 00000168 E1A02BA2        LSR              R2, R2, #23
  145 0000016C E1A03BA3        LSR              R3, R3, #23
  146 00000170 E0825003        ADD              R5, R2, R3
  147 00000174 12855001        ADDNE            R5, R5, #1  ;ADD MENTISSA MULTI
                                                            PLICATION CARRY
  148 00000178 E245507F        SUB              R5, R5, #127
  149 0000017C E1844B85        ORR              R4, R4, R5, LSL #23
  150 00000180         ;check exception : case exponent of result is over 255 o
                       r under 0
  151 00000180 E3550000        CMP              R5, #0
  152 00000184 B3A04000        MOVLT            R4, #0
  153 00000188 BA000006        BLT              endFMul



ARM Macro Assembler    Page 4 


  154 0000018C E35500FF        CMP              R5, #255
  155 00000190 C59F4134        LDRGT            R4, exponentMask ;store r4 0x7f
                                                            800000 that means i
                                                            nifinity
  156 00000194         ;get sign number
  157 00000194 E2002102        AND              R2, R0, #0x80000000
  158 00000198 E2013102        AND              R3, R1, #0x80000000
  159 0000019C E0225003        EOR              R5, R2, R3
  160 000001A0 E1844005        ORR              R4, R4, R5
  161 000001A4 E1A00004        MOV              R0, R4
  162 000001A8         endFMul
  163 000001A8 E9BD0030        LDMED            SP!, {R4, R5} ;load rgister sto
                                                            red
  164 000001AC E1A0F00E        MOV              PC, LR      ;return value
  165 000001B0         
  166 000001B0         floatAdd
  167 000001B0         ;R0 : input num1 and return
  168 000001B0         ;R1 : input num2
  169 000001B0         ;R2 : TEMPORARY FOR R0
  170 000001B0         ;R3 : TEMPORARY FOR R1
  171 000001B0         ;R6 : FOR EXPONENT MASK
  172 000001B0 E82D0040        STMED            SP!, {R6}
  173 000001B4 E59F6110        LDR              R6, exponentMask
  174 000001B8         ;GET EXPONENT
  175 000001B8 E0002006        AND              R2, R0, R6
  176 000001BC E0013006        AND              R3, R1, R6
  177 000001C0         ;ALIGN R0 AND R1 BY EXPONENT, R0 AS BIGGER ONE
  178 000001C0 E1520003        CMP              R2, R3
  179 000001C4 31A03001        MOVLO            R3, R1
  180 000001C8 31A01000        MOVLO            R1, R0
  181 000001CC 31A00003        MOVLO            R0, R3
  182 000001D0         ;GET DIFFLENCE OF EXPONENTS R0.EXPONENT - R1.EXPONENT
  183 000001D0 E0002006        AND              R2, R0, R6
  184 000001D4 E1E03002        MVN              R3, R2      ;EXCEPTION CHECK
  185 000001D8 E1130006        TST              R3, R6
  186 000001DC 0A000030        BEQ              infinityException ;EXCEPTION: R
                                                            0 HAS INFINITY OR N
                                                            AN NUMBER
  187 000001E0 E0013006        AND              R3, R1, R6
  188 000001E4 E0422003        SUB              R2, R2, R3
  189 000001E8 E1A02BA2        LSR              R2, R2, #23 ;SHIFT EXPONENT FRO
                                                            M [30:23] TO [7:0]
  190 000001EC E3520017        CMP              R2, #23     ;EXCEPTION CHECK
  191 000001F0 C9BD0040        LDMEDGT          SP!, {R6}
  192 000001F4 C1A0F00E        MOVGT            PC, LR      ;EXCEPTION : THE SA
                                                            MLL NUMBER IS SO SM
                                                            ALL THAT ADDITION I
                                                            S NOT VALID
  193 000001F8         ;GET MANTISSA (SHIFTED BY EXPONENT)
  194 000001F8 E82D0030        STMED            SP!, {R4-R5} ;TO USE NON PRESER
                                                            VED REGISTER, STORE
                                                             THEM TO MEMORY
  195 000001FC         ;R4:SIGN BIT FOR R0, R5: SIGN BIT FOR R1
  196 000001FC E1A03401        LSL              R3, R1, #8
  197 00000200 E3833102        ORR              R3, R3, #0x80000000
  198 00000204 E1A03233        LSR              R3, R3, R2
  199 00000208 E1A02400        LSL              R2, R0, #8
  200 0000020C E3822102        ORR              R2, R2, #0x80000000
  201 00000210         ;ADDITION OF MANTISSA



ARM Macro Assembler    Page 5 


  202 00000210 E2004102        AND              R4, R0, #0x80000000
  203 00000214 E2015102        AND              R5, R1, #0x80000000
  204 00000218 E1340005        TEQ              R4, R5      ;CHECK IF IT'S ++,-
                                                            - OR +-,-+
  205 0000021C E0005006        AND              R5, R0, R6  ;GET EXPONENTIAL OF
                                                             R0
  206 00000220 1A000006        BNE              subcase
  207 00000224         ;IF TWO SIGN BITS IS SAME
  208 00000224 E0922003        ADDS             R2, R2, R3
  209 00000228 21A020A2        LSRCS            R2, R2, #1  ;IF CARRY SET, CONC
                                                            ATNATE CARRY TO MSB
                                                             OF RESULT OF SUM A
                                                            ND REGULATE EXPONEN
                                                            T
  210 0000022C 23822102        ORRCS            R2, R2, #0x80000000
  211 00000230 22855502        ADDCS            R5, R5, #0x00800000
  212 00000234 E1550006        CMP              R5, R6      ;CHECK EXCEPTION : 
                                                            EXPONENT OVERFLOW, 
                                                            THE CASE EXPONENT G
                                                            ET 1111_1111, IT ME
                                                            ANS INFINITY
  213 00000238 03A02000        MOVEQ            R2, #0      ;SET MANTISSA 0
  214 0000023C EA000012        B                makeResult
  215 00000240         subcase
  216 00000240 E3540102        CMP              R4, #0x80000000 ;CHECK WHICH RE
                                                            GISTER IS NEGATIVE 
                                                            NUMBER
  217 00000244 E2822001        ADD              R2, R2, #1  ;TO AVOID SUBSEQ EX
                                                            CUTION WHEN R2-R3 E
                                                            QUALS 0, ADD 1 AT R
                                                            2; IT'S ENSURED THA
                                                            T R2[7:0] IS 0
  218 00000248 10522003        SUBSNE           R2, R2, R3
  219 0000024C E2422001        SUB              R2, R2, #1  ;TO AVOID GETTING I
                                                            NCORRECT RESULT WHE
                                                            N SUBSEQ EXCUTING, 
                                                            SUBSTRACT 1 FROM R2
                                                            
  220 00000250 00532002        SUBSEQ           R2, R3, R2
  221 00000254 23A04000        MOVCS            R4, #0      ;IF CARRY SET, MARK
                                                             R4 THAT THE RESULT
                                                             IS POSITIVE NUMBER
                                                            
  222 00000258         ;IF SUBSTRACTION'S RESULT IS NEGATIVE, MAKE IT POSITIVE 
                       NUMBER
  223 00000258 31E02002        MVNCC            R2, R2
  224 0000025C 32822001        ADDCC            R2, R2, #1
  225 00000260 33A04102        MOVCC            R4, #0x80000000 ;MARK R4 THAT T
                                                            HE RESULT IS NEGATI
                                                            VE NUMBER
  226 00000264         ;CHECK IF IT'S 0
  227 00000264 E3320000        TEQ              R2, #0
  228 00000268 03A05000        MOVEQ            R5, #0      ;EXCEPTION: RESULT 
                                                            IS 0, EXPONENT = 0
  229 0000026C 0A000006        BEQ              makeResult  ;QUIT
  230 00000270         removeZero                           ;REMOVE 0 ON MSB
  231 00000270 E3120102        TST              R2, #0x80000000
  232 00000274 01A02082        LSLEQ            R2, R2, #1
  233 00000278 02455502        SUBEQ            R5, R5, #0x00800000



ARM Macro Assembler    Page 6 


  234 0000027C 0AFFFFFB        BEQ              removeZero
  235 00000280 E3150102        TST              R5, #0x80000000 ;CHECK EXPONENT
                                                             UNDERFLOW
  236 00000284 13A02000        MOVNE            R2, #0      ;EXCEPTION: UNDERFL
                                                            OW; RESULT IS TOO S
                                                            MALL LIKE 0, MANTIS
                                                            SA = 0 & EXPONENT =
                                                             0
  237 00000288 13A05000        MOVNE            R5, #0
  238 0000028C         makeResult
  239 0000028C         ;R2:MANTISSA ,R4:SIGN, R5:EXPONENT
  240 0000028C E1840005        ORR              R0, R4, R5
  241 00000290 E1A02082        LSL              R2, R2, #1  ;REMOVE CHARACTERIS
                                                            TIC
  242 00000294 E1A024A2        LSR              R2, R2, #9  ;SHIFT TO SET MANTI
                                                            SSA CORRECT POSITIO
                                                            N
  243 00000298 E1800002        ORR              R0, R0, R2
  244 0000029C E9BD0070        LDMED            SP!, {R4-R6}
  245 000002A0 E1A0F00E        MOV              PC, LR      ;QUIT SUBROUTINE
  246 000002A4         infinityException
  247 000002A4 E3866102        ORR              R6, #0x80000000 ;CHECK R0'S FRA
                                                            CTION IS 0
  248 000002A8 E1E06006        MVN              R6, R6
  249 000002AC E1100006        TST              R0, R6
  250 000002B0 1A000003        BNE              endException ;IF FRACTION IS NO
                                                            T 0, RETURN R0
  251 000002B4 E0902001        ADDS             R2, R0, R1  ;IF FRACTION IS 0, 
                                                            CHECK R1'S FRACTION
                                                            
  252 000002B8 3A000001        BCC              endException
  253 000002BC E352047F        CMP              R2, #0x7F000000 ;IF THE RESULT 
                                                            OF SUM IS CARRY SET
                                                             AND 0x7F00_0000, I
                                                            T MEANS INFINITY - 
                                                            INFINITY SO RETURN 
                                                            NaN
  254 000002C0 03E00000        MOVEQ            R0, #0XFFFFFFFF ;RETURN NAN
  255 000002C4         endException
  256 000002C4 E9BD0040        LDMED            SP!, {R6}
  257 000002C8 E1A0F00E        MOV              PC, LR      ;EXCEPTION : INFINI
                                                            TY OR NAN, RETURN W
                                                            ITH THAT NUMBER
  258 000002CC         
  259 000002CC 7F800000 
                       exponentMask
                               DCD              0x7F800000
  260 000002D0         
  261 000002D0         Result                               ; Store less that -
                                                            4.7 of the convolut
                                                            ion results(32bit, 
                                                            double word) and th
                                                            eir indices(word).
  262 000002D0         
  263 000002D0 F0000000 
                       Save_Result_Address
                               DCD              &F0000000
  264 000002D4         
  265 000002D4         fliter                               ; [1.95, 1.72, -0.4



ARM Macro Assembler    Page 7 


                                                            31, -1.278, -0.8022
                                                            , -0.2115]
  266 000002D4 3FF9999A 
              3FDC28F6 
              BEDCAC08 
              BFA39581 
              BF4D5CFB 
              BE589375         DCD              0x3FF9999A, 0x3FDC28F6, 0xBEDCA
C08, 0xBFA39581, 0xBF4D5CFB, 0xBE589375
  267 000002EC         
  268 000002EC         Sampled_Data
  269 000002EC BF20C60C 
              BB08B8D8 
              3F1A6D0B 
              3F96A4D0         DCD              0xBF20C60C, 0xBB08B8D8, 0x3F1A6
D0B, 0x3F96A4D0
  270 000002FC 3FDAB3A4 
              400C165A 
              4026FE23 
              403D9B3C         DCD              0x3FDAB3A4, 0x400C165A, 0x4026F
E23, 0x403D9B3C
  271 0000030C 404F8DD9 
              405C8E13 
              40646D24 
              40671628         DCD              0x404F8DD9, 0x405C8E13, 0x40646
D24, 0x40671628
  272 0000031C 40648E4D 
              405CF47D 
              40508084 
              403F81B4         DCD              0x40648E4D, 0x405CF47D, 0x40508
084, 0x403F81B4
  273 0000032C 402A5D12 
              40118B12 
              3FEB29FA 
              3FAE23F3         DCD              0x402A5D12, 0x40118B12, 0x3FEB2
9FA, 0x3FAE23F3
  274 0000033C 3F5A8F67 
              3EA79DBF 
              BE551889 
              BF3DFB17         DCD              0x3F5A8F67, 0x3EA79DBF, 0xBE551
889, 0xBF3DFB17
  275 0000034C BFA1D441 
              BFE1E0C5 
              C00EF836 
              C02A7523         DCD              0xBFA1D441, 0xBFE1E0C5, 0xC00EF
836, 0xC02A7523
  276 0000035C C042EA38 
              C057EC65 
              C0692464 
              C0765036         DCD              0xC042EA38, 0xC057EC65, 0xC0692
464, 0xC0765036
  277 0000036C C07F4435 
              C081F5CD 
              C082244C 
              C08039FB         DCD              0xC07F4435, 0xC081F5CD, 0xC0822
44C, 0xC08039FB
  278 0000037C C0789C34 
              C06D0440 
              C05E01C1 



ARM Macro Assembler    Page 8 


              C04BFB0F         DCD              0xC0789C34, 0xC06D0440, 0xC05E0
1C1, 0xC04BFB0F
  279 0000038C C03764C9 
              C020BF3A 
              C008937D 
              BFDEE10D         DCD              0xC03764C9, 0xC020BF3A, 0xC0089
37D, 0xBFDEE10D
  280 0000039C BFABD023 
              BF722E4C 
              BF0FA4CA 
              BE488E71         DCD              0xBFABD023, 0xBF722E4C, 0xBF0FA
4CA, 0xBE488E71
  281 000003AC 3E116448 
              3EE40582 
              3F35417F 
              3F6CBB89         DCD              0x3E116448, 0x3EE40582, 0x3F354
17F, 0x3F6CBB89
  282 000003BC 3F8BADC0 
              3F9A2A8D 
              3FA19423 
              3FA1D150         DCD              0x3F8BADC0, 0x3F9A2A8D, 0x3FA19
423, 0x3FA1D150
  283 000003CC 3F9AEFAF 
              3F8D22C6 
              3F7184D6 
              3F3C90D8         DCD              0x3F9AEFAF, 0x3F8D22C6, 0x3F718
4D6, 0x3F3C90D8
  284 000003DC 3EF93646 
              3E4C3067 
              BDF42987 
              BEECB7D0         DCD              0x3EF93646, 0x3E4C3067, 0xBDF42
987, 0xBEECB7D0
  285 000003EC BF529EFD 
              BF98B18C 
              BFC85A59 
              BFF75116         DCD              0xBF529EFD, 0xBF98B18C, 0xBFC85
A59, 0xBFF75116
  286 000003FC C012516B 
              C027B3A2 
              C03B6288 
              C04CFAF6         DCD              0xC012516B, 0xC027B3A2, 0xC03B6
288, 0xC04CFAF6
  287 0000040C C05C2514 
              C06895DA 
              C0721050 
              C078667C         DCD              0xC05C2514, 0xC06895DA, 0xC0721
050, 0xC078667C
  288 0000041C C07B7A01 
              C07B3C6F 
              C077AF3F 
              C070E381         DCD              0xC07B7A01, 0xC07B3C6F, 0xC077A
F3F, 0xC070E381
  289 0000042C C066F943 
              C05A1EAD 
              C04A8EE1 
              C03890A4         DCD              0xC066F943, 0xC05A1EAD, 0xC04A8
EE1, 0xC03890A4
  290 0000043C C02474D8 
              C00E94CA 



ARM Macro Assembler    Page 9 


              BFEEA0DC 
              BFBE18FD         DCD              0xC02474D8, 0xC00E94CA, 0xBFEEA
0DC, 0xBFBE18FD
  291 0000044C BF8C612E 
              BF349547 
              BEA2934C 
              3D78C33E         DCD              0xBF8C612E, 0xBF349547, 0xBEA29
34C, 0x3D78C33E
  292 0000045C 3ED8D292 
              3F43E21F 
              3F8A542B 
              3FAEC7C2         DCD              0x3ED8D292, 0x3F43E21F, 0x3F8A5
42B, 0x3FAEC7C2
  293 0000046C 3FCEC8AA 
              3FE9E869 
              3FFFCE74 
              40081C7F         DCD              0x3FCEC8AA, 0x3FE9E869, 0x3FFFC
E74, 0x40081C7F
  294 0000047C 400D7EAF 
              40100408 
              400FAE28 
              400C89AC         DCD              0x400D7EAF, 0x40100408, 0x400FA
E28, 0x400C89AC
  295 0000048C 4006ADA7 
              3FFC75E8 
              3FE6B6C8 
              3FCC81A2         DCD              0x4006ADA7, 0x3FFC75E8, 0x3FE6B
6C8, 0x3FCC81A2
  296 0000049C 3FAE4843 
              3F8C8865 
              3F4F92F3 
              3F0134CA         DCD              0x3FAE4843, 0x3F8C8865, 0x3F4F9
2F3, 0x3F0134CA
  297 000004AC 3E3C79B9 
              BE16089E 
              BEF6FB0B 
              BF51A6F3         DCD              0x3E3C79B9, 0xBE16089E, 0xBEF6F
B0B, 0xBF51A6F3
  298 000004BC BF936C32 
              BFBCFB1B 
              BFE4F945 
              C0057417         DCD              0xBF936C32, 0xBFBCFB1B, 0xBFE4F
945, 0xC0057417
  299 000004CC C0172993 
              C027683B 
              C0360134 
              C042CC12         DCD              0xC0172993, 0xC027683B, 0xC0360
134, 0xC042CC12
  300 000004DC C04DA727 
              C05677C8 
              C05D2A75 
              C061B2F1         DCD              0xC04DA727, 0xC05677C8, 0xC05D2
A75, 0xC061B2F1
  301 000004EC C0640C42 
              C06438A7 
              C0624173 
              C05E36DE         DCD              0xC0640C42, 0xC06438A7, 0xC0624
173, 0xC05E36DE
  302 000004FC C0582FC3 



ARM Macro Assembler    Page 10 


              C0504950 
              C046A6A5 
              C03B7066         DCD              0xC0582FC3, 0xC0504950, 0xC046A
6A5, 0xC03B7066
  303 0000050C C02ED43E 
              C0210454 
              C01236B8 
              C002A4B8         DCD              0xC02ED43E, 0xC0210454, 0xC0123
6B8, 0xC002A4B8
  304 0000051C BFE5146A 
              BFC449C8 
              BFA36715 
              BF82EA5D         DCD              0xBFE5146A, 0xBFC449C8, 0xBFA36
715, 0xBF82EA5D
  305 0000052C BF46A106 
              BF0A2710 
              BEA2A344 
              BDE7F688         DCD              0xBF46A106, 0xBF0A2710, 0xBEA2A
344, 0xBDE7F688
  306 0000053C 3D901BA9 
              3E6BEB09 
              3EBA86BF 
              3EF0A699         DCD              0x3D901BA9, 0x3E6BEB09, 0x3EBA8
6BF, 0x3EF0A699
  307 0000054C 3F0BBD04 
              3F1731E2 
              3F1A8439 
              3F15A8E3         DCD              0x3F0BBD04, 0x3F1731E2, 0x3F1A8
439, 0x3F15A8E3
  308 0000055C 3F08B868 
              3EE7DF14 
              3EAF5E85 
              3E51F08C         DCD              0x3F08B868, 0x3EE7DF14, 0x3EAF5
E85, 0x3E51F08C
  309 0000056C 00000000 
              3EAFBCA1 
              3F2E46B1 
              3F80E603         DCD              0x00000000, 0x3EAFBCA1, 0x3F2E4
6B1, 0x3F80E603
  310 0000057C 3FA8894F 
              3FCD6C2C 
              3FEEFE0A 
              40066112         DCD              0x3FA8894F, 0x3FCD6C2C, 0x3FEEF
E0A, 0x40066112
  311 0000058C 40132922 
              401DB07A 
              4025DD7C 
              402BA41A         DCD              0x40132922, 0x401DB07A, 0x4025D
D7C, 0x402BA41A
  312 0000059C 402F05DD 
              403011A1 
              402EE2F0 
              402BA10B         DCD              0x402F05DD, 0x403011A1, 0x402EE
2F0, 0x402BA10B
  313 000005AC 40267DAA 
              401FB377 
              4017844E 
              400E375A         DCD              0x40267DAA, 0x401FB377, 0x40178
44E, 0x400E375A



ARM Macro Assembler    Page 11 


  314 000005BC 4004170D 
              3FF2DE18 
              3FDD142E 
              3FC7600B         DCD              0x4004170D, 0x3FF2DE18, 0x3FDD1
42E, 0x3FC7600B
  315 000005CC 3FB247B5 
              3F9E4408 
              3F8BBDA4 
              3F7614AA         DCD              0x3FB247B5, 0x3F9E4408, 0x3F8BB
DA4, 0x3F7614AA
  316 000005DC 3F58D639 
              3F40159B 
              3F2BFAB5 
              3F1C7FA3         DCD              0x3F58D639, 0x3F40159B, 0x3F2BF
AB5, 0x3F1C7FA3
  317 000005EC 3F117205 
              3F0A759D 
              3F07082A 
              3F06865F         DCD              0x3F117205, 0x3F0A759D, 0x3F070
82A, 0x3F06865F
  318 000005FC 3F0831D4 
              3F0B37B8 
              3F0EB82C 
              3F11CDF4         DCD              0x3F0831D4, 0x3F0B37B8, 0x3F0EB
82C, 0x3F11CDF4
  319 0000060C 3F139654 
              3F1338E0 
              3F0FEEFB 
              3F090AD8         DCD              0x3F139654, 0x3F1338E0, 0x3F0FE
EFB, 0x3F090AD8
  320 0000061C 3EFBFB7F 
              3EDCBAE2 
              3EB3D0EC 
              3E81128B         DCD              0x3EFBFB7F, 0x3EDCBAE2, 0x3EB3D
0EC, 0x3E81128B
  321 0000062C 3E09606A 
              BAC90C27 
              BE1CE2AA 
              BEA30A50         DCD              0x3E09606A, 0xBAC90C27, 0xBE1CE
2AA, 0xBEA30A50
  322 0000063C BEFD0636 
              BF2D489B 
              BF5CCE81 
              BF85FB8F         DCD              0xBEFD0636, 0xBF2D489B, 0xBF5CC
E81, 0xBF85FB8F
  323 0000064C BF9CCAD6 
              BFB23B25 
              BFC5B326 
              BFD69E4F         DCD              0xBF9CCAD6, 0xBFB23B25, 0xBFC5B
326, 0xBFD69E4F
  324 0000065C BFE47104 
              BFEEAC86 
              BFF4E29E 
              BFF6B8D7         DCD              0xBFE47104, 0xBFEEAC86, 0xBFF4E
29E, 0xBFF6B8D7
  325 0000066C BFF3EB47 
              BFEC4EC1 
              BFDFD265 
              BFCE8087         DCD              0xBFF3EB47, 0xBFEC4EC1, 0xBFDFD



ARM Macro Assembler    Page 12 


265, 0xBFCE8087
  326 0000067C BFB87EDD 
              BF9E0DFF 
              BF7F1053 
              BF3ABEBB         DCD              0xBFB87EDD, 0xBF9E0DFF, 0xBF7F1
053, 0xBF3ABEBB
  327 0000068C BEE06B6D 
              BE02A083 
              3E4A6799 
              3F082AD6         DCD              0xBEE06B6D, 0xBE02A083, 0x3E4A6
799, 0x3F082AD6
  328 0000069C 3F5E982A 
              3F9A358F 
              3FC418C8 
              3FEC4359         DCD              0x3F5E982A, 0x3F9A358F, 0x3FC41
8C8, 0x3FEC4359
  329 000006AC 400906DA 
              401A6F86 
              402A1866 
              4037C8CD         DCD              0x400906DA, 0x401A6F86, 0x402A1
866, 0x4037C8CD
  330 000006BC 404353E7 
              404C999E 
              4053872E 
              4058175C         DCD              0x404353E7, 0x404C999E, 0x40538
72E, 0x4058175C
  331 000006CC 405A5253 
              405A4D2A 
              40582910 
              40541230         DCD              0x405A5253, 0x405A4D2A, 0x40582
910, 0x40541230
  332 000006DC 404E3E43 
              4046EAF5 
              403E5C05 
              4034D958         DCD              0x404E3E43, 0x4046EAF5, 0x403E5
C05, 0x4034D958
  333 000006EC 402AACE4 
              4020209C 
              40157C69 
              400B042E         DCD              0x402AACE4, 0x4020209C, 0x40157
C69, 0x400B042E
  334 000006FC 4000F5FA 
              3FEF10D0 
              3FDDD270 
              3FCE786F         DCD              0x4000F5FA, 0x3FEF10D0, 0x3FDDD
270, 0x3FCE786F
  335 0000070C 3FC134D7 
              3FB62333 
              3FAD483D 
              3FA69241         DCD              0x3FC134D7, 0x3FB62333, 0x3FAD4
83D, 0x3FA69241
  336 0000071C 3FA1DA2C 
              3F9EE537 
              3F9D6730 
              3F9D0539         DCD              0x3FA1DA2C, 0x3F9EE537, 0x3F9D6
730, 0x3F9D0539
  337 0000072C 3F9D5906 
              3F9DF46A 
              3F9E651A 



ARM Macro Assembler    Page 13 


              3F9E38A0         DCD              0x3F9D5906, 0x3F9DF46A, 0x3F9E6
51A, 0x3F9E38A0
  338 0000073C 3F9D0045 
              3F9A54E4 
              3F95DA8A 
              3F8F43C2         DCD              0x3F9D0045, 0x3F9A54E4, 0x3F95D
A8A, 0x3F8F43C2
  339 0000074C 3F865478 
              3F75C8BA 
              3F59C16B 
              3F389B1D         DCD              0x3F865478, 0x3F75C8BA, 0x3F59C
16B, 0x3F389B1D
  340 0000075C 3F128C84 
              3ECFF54C 
              3E65DCC0 
              3CF7AED7         DCD              0x3F128C84, 0x3ECFF54C, 0x3E65D
CC0, 0x3CF7AED7
  341 0000076C BE31470E 
              BEC36B5E 
              BF1753CE 
              BF4BFF24         DCD              0xBE31470E, 0xBEC36B5E, 0xBF175
3CE, 0xBF4BFF24
  342 0000077C BF7E8008 
              BF96CE31 
              BFAC100D 
              BFBE72B7         DCD              0xBF7E8008, 0xBF96CE31, 0xBFAC1
00D, 0xBFBE72B7
  343 0000078C BFCD6E90 
              BFD88B04 
              BFDF61FD 
              BFE1A2E6         DCD              0xBFCD6E90, 0xBFD88B04, 0xBFDF6
1FD, 0xBFE1A2E6
  344 0000079C BFDF1522 
              BFD799E7 
              BFCB2D74 
              BFB9E792         DCD              0xBFDF1522, 0xBFD799E7, 0xBFCB2
D74, 0xBFB9E792
  345 000007AC BFA3FB5E 
              BF89B665 
              BF56FE0B 
              BF13A46D         DCD              0xBFA3FB5E, 0xBF89B665, 0xBF56F
E0B, 0xBF13A46D
  346 000007BC BE9502B6 
              3C4A3B0D 
              3EA7FDCC 
              3F2693FA         DCD              0xBE9502B6, 0x3C4A3B0D, 0x3EA7F
DCC, 0x3F2693FA
  347 000007CC 3F79731D 
              3FA593D3 
              3FCD230F 
              3FF2BA64         DCD              0x3F79731D, 0x3FA593D3, 0x3FCD2
30F, 0x3FF2BA64
  348 000007DC 400ADCEC 
              401AC902 
              4028E3A6 
              4034FA49         DCD              0x400ADCEC, 0x401AC902, 0x4028E
3A6, 0x4034FA49
  349 000007EC 40400000 
              40756413 



ARM Macro Assembler    Page 14 


              4093E595 
              40AA38E3         DCD              0x40400000, 0x40756413, 0x4093E
595, 0x40AA38E3
  350 000007FC 40BC8125 
              40C9DFCC 
              40D1D121 
              40D432EE         DCD              0x40BC8125, 0x40C9DFCC, 0x40D1D
121, 0x40D432EE
  351 0000080C 40D142BF 
              40C99413 
              40BDFF91 
              40AF8CF9         DCD              0x40D142BF, 0x40C99413, 0x40BDF
F91, 0x40AF8CF9
  352 0000081C 409F5A02 
              408E80A2 
              407BFE46 
              405D48B6         DCD              0x409F5A02, 0x408E80A2, 0x407BF
E46, 0x405D48B6
  353 0000082C 4042036C 
              402AC8A9 
              4017AB51 
              40084682         DCD              0x4042036C, 0x402AC8A9, 0x4017A
B51, 0x40084682
  354 0000083C 3FF7B2E7 
              3FE2D8BA 
              3FCFF44C 
              3FBD3489         DCD              0x3FF7B2E7, 0x3FE2D8BA, 0x3FCFF
44C, 0x3FBD3489
  355 0000084C 3FA94C48 
              3F93ABF4 
              3F794725 
              3F4AD260         DCD              0x3FA94C48, 0x3F93ABF4, 0x3F794
725, 0x3F4AD260
  356 0000085C 3F200558 
              3EFC5311 
              3ED670A6 
              3EDA5EF9         DCD              0x3F200558, 0x3EFC5311, 0x3ED67
0A6, 0x3EDA5EF9
  357 0000086C 3F09597D 
              3F439CCF 
              3F8EF273 
              3FCBDAB6         DCD              0x3F09597D, 0x3F439CCF, 0x3F8EF
273, 0x3FCBDAB6
  358 0000087C 400B7D0D 
              4036BC5C 
              4065ABD2 
              408AEC86         DCD              0x400B7D0D, 0x4036BC5C, 0x4065A
BD2, 0x408AEC86
  359 0000088C 40A245A9 
              40B77C23 
              40C93E08 
              40D667E9         DCD              0x40A245A9, 0x40B77C23, 0x40C93
E08, 0x40D667E9
  360 0000089C 40DE1CC0 
              40DFD84C 
              40DB7A2E 
              40D148C8         DCD              0x40DE1CC0, 0x40DFD84C, 0x40DB7
A2E, 0x40D148C8
  361 000008AC 40C1EB7D 



ARM Macro Assembler    Page 15 


              40AE5CFD 
              4097D6C0 
              407F6F5C         DCD              0x40C1EB7D, 0x40AE5CFD, 0x4097D
6C0, 0x407F6F5C
  362 000008BC 404ED067 
              40207CC4 
              3FED923F 
              3FA712F0         DCD              0x404ED067, 0x40207CC4, 0x3FED9
23F, 0x3FA712F0
  363 000008CC 3F5FD3E4 
              3F12645D 
              3ECAE575 
              3EAC9259         DCD              0x3F5FD3E4, 0x3F12645D, 0x3ECAE
575, 0x3EAC9259
  364 000008DC 3EC0BA7C 
              3EFBE3F3 
              3F28CE12 
              3F5AF2FF         DCD              0x3EC0BA7C, 0x3EFBE3F3, 0x3F28C
E12, 0x3F5AF2FF
  365 000008EC 3F87A11B 
              3FA0FFDB 
              3FB8928B 
              3FCE3E99         DCD              0x3F87A11B, 0x3FA0FFDB, 0x3FB89
28B, 0x3FCE3E99
  366 000008FC 3FE2C334 
              3FF78FC1 
              40074235 
              4014D1ED         DCD              0x3FE2C334, 0x3FF78FC1, 0x40074
235, 0x4014D1ED
  367 0000090C 40255F6E 
              40399198 
              4051AB54 
              406D7343         DCD              0x40255F6E, 0x40399198, 0x4051A
B54, 0x406D7343
  368 0000091C 40861437 
              409642D8 
              40A669F4 
              40B584D6         DCD              0x40861437, 0x409642D8, 0x40A66
9F4, 0x40B584D6
  369 0000092C 40C27ACC 
              40CC37C3 
              40D1C5E8 
              40D265E2         DCD              0x40C27ACC, 0x40CC37C3, 0x40D1C
5E8, 0x40D265E2
  370 0000093C 40CDA347 
              40C3632C 
              40B3EB4F 
              409FE10D         DCD              0x40CDA347, 0x40C3632C, 0x40B3E
B4F, 0x409FE10D
  371 0000094C 40883FFC 
              405C91E4 
              4026D5BB 
              3FE49DDE         DCD              0x40883FFC, 0x405C91E4, 0x4026D
5BB, 0x3FE49DDE
  372 0000095C 3F83D8EF 
              3EC283C4 
              BE0615F4 
              BEF552FE         DCD              0x3F83D8EF, 0x3EC283C4, 0xBE061
5F4, 0xBEF552FE



ARM Macro Assembler    Page 16 


  373 0000096C BF2723D3 
              BF270189 
              BEFA7DB8 
              BE3D91CA         DCD              0xBF2723D3, 0xBF270189, 0xBEFA7
DB8, 0xBE3D91CA
  374 0000097C 3E6C3DC5 
              3F39649B 
              3FA13B7A 
              3FE6C191         DCD              0x3E6C3DC5, 0x3F39649B, 0x3FA13
B7A, 0x3FE6C191
  375 0000098C 4014B78F 
              403321F0 
              404DA230 
              4063C630         DCD              0x4014B78F, 0x403321F0, 0x404DA
230, 0x4063C630
  376 0000099C 4075A19B 
              4081DD15 
              40877440 
              408C1895         DCD              0x4075A19B, 0x4081DD15, 0x40877
440, 0x408C1895
  377 000009AC 40904D24 
              40948137 
              4098FEA7 
              409DDD0D         DCD              0x40904D24, 0x40948137, 0x4098F
EA7, 0x409DDD0D
  378 000009BC 40A2FB3A 
              40A7FFB6 
              40AC605E 
              40AF705A         DCD              0x40A2FB3A, 0x40A7FFB6, 0x40AC6
05E, 0x40AF705A
  379 000009CC 40B07312 
              40AEB232 
              40A99476 
              40A0B2DD         DCD              0x40B07312, 0x40AEB232, 0x40A99
476, 0x40A0B2DD
  380 000009DC 4093E9ED 
              40836536 
              405F472E 
              4032E759         DCD              0x4093E9ED, 0x40836536, 0x405F4
72E, 0x4032E759
  381 000009EC 4003D0D4 
              3FA91B1B 
              3F1F6FD3 
              3BF1A611         DCD              0x4003D0D4, 0x3FA91B1B, 0x3F1F6
FD3, 0x3BF1A611
  382 000009FC BEF8C529 
              BF530DDA 
              BF7C3518 
              BF74D9E3         DCD              0xBEF8C529, 0xBF530DDA, 0xBF7C3
518, 0xBF74D9E3
  383 00000A0C BF3D2BFF 
              BEB111CC 
              3E4B21A7 
              3F5C1925         DCD              0xBF3D2BFF, 0xBEB111CC, 0x3E4B2
1A7, 0x3F5C1925
  384 00000A1C 3FCC8307 
              401792FC 
              40482A77 
              40756F2C         DCD              0x3FCC8307, 0x401792FC, 0x40482



ARM Macro Assembler    Page 17 


A77, 0x40756F2C
  385 00000A2C 408E9802 
              409EE484 
              40AB1D6B 
              40B31930         DCD              0x408E9802, 0x409EE484, 0x40AB1
D6B, 0x40B31930
  386 00000A3C 40B70051 
              40B741EA 
              40B48249 
              40AF857C         DCD              0x40B70051, 0x40B741EA, 0x40B48
249, 0x40AF857C
  387 00000A4C 40A91818 
              40A1F8A3 
              409AC3EB 
              4093E648         DCD              0x40A91818, 0x40A1F8A3, 0x409AC
3EB, 0x4093E648
  388 00000A5C 408D932F 
              4087C3DF 
              40823D2B 
              40793743         DCD              0x408D932F, 0x4087C3DF, 0x40823
D2B, 0x40793743
  389 00000A6C         
  390 00000A6C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\term_project.d -o.\objects\term_project.o -IC:\Keil_v5\ARM\R
V31\INC -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine=
"__UVISION_VERSION SETA 529" --list=.\listings\term_project.lst Term_project.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FourPointSeven 00000110

Symbol: FourPointSeven
   Definitions
      At line 111 in file Term_project.s
   Uses
      At line 79 in file Term_project.s
Comment: FourPointSeven used once
Main 00000000

Symbol: Main
   Definitions
      At line 3 in file Term_project.s
   Uses
      None
Comment: Main unused
Result 000002D0

Symbol: Result
   Definitions
      At line 261 in file Term_project.s
   Uses
      None
Comment: Result unused
Sampled_Data 000002EC

Symbol: Sampled_Data
   Definitions
      At line 268 in file Term_project.s
   Uses
      At line 19 in file Term_project.s
Comment: Sampled_Data used once
Save_Result_Address 000002D0

Symbol: Save_Result_Address
   Definitions
      At line 263 in file Term_project.s
   Uses
      At line 90 in file Term_project.s
Comment: Save_Result_Address used once
endException 000002C4

Symbol: endException
   Definitions
      At line 255 in file Term_project.s
   Uses
      At line 250 in file Term_project.s
      At line 252 in file Term_project.s

endFMul 000001A8

Symbol: endFMul
   Definitions
      At line 162 in file Term_project.s
   Uses
      At line 124 in file Term_project.s
      At line 127 in file Term_project.s
      At line 153 in file Term_project.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

exponentMask 000002CC

Symbol: exponentMask
   Definitions
      At line 259 in file Term_project.s
   Uses
      At line 141 in file Term_project.s
      At line 155 in file Term_project.s
      At line 173 in file Term_project.s

fliter 000002D4

Symbol: fliter
   Definitions
      At line 265 in file Term_project.s
   Uses
      At line 6 in file Term_project.s
Comment: fliter used once
floatAdd 000001B0

Symbol: floatAdd
   Definitions
      At line 166 in file Term_project.s
   Uses
      At line 39 in file Term_project.s
      At line 48 in file Term_project.s
      At line 57 in file Term_project.s
      At line 66 in file Term_project.s
      At line 75 in file Term_project.s
      At line 80 in file Term_project.s

floatMul 00000114

Symbol: floatMul
   Definitions
      At line 113 in file Term_project.s
   Uses
      At line 30 in file Term_project.s
      At line 37 in file Term_project.s
      At line 46 in file Term_project.s
      At line 55 in file Term_project.s
      At line 64 in file Term_project.s
      At line 73 in file Term_project.s

forCONVOLUTION 00000018

Symbol: forCONVOLUTION
   Definitions
      At line 23 in file Term_project.s
   Uses
      At line 84 in file Term_project.s
Comment: forCONVOLUTION used once
forEndCONVOLUTION 000000D4

Symbol: forEndCONVOLUTION
   Definitions
      At line 85 in file Term_project.s
   Uses
      At line 25 in file Term_project.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: forEndCONVOLUTION used once
infinityException 000002A4

Symbol: infinityException
   Definitions
      At line 246 in file Term_project.s
   Uses
      At line 186 in file Term_project.s
Comment: infinityException used once
makeResult 0000028C

Symbol: makeResult
   Definitions
      At line 238 in file Term_project.s
   Uses
      At line 214 in file Term_project.s
      At line 229 in file Term_project.s

removeZero 00000270

Symbol: removeZero
   Definitions
      At line 230 in file Term_project.s
   Uses
      At line 234 in file Term_project.s
Comment: removeZero used once
storeDATA 000000E0

Symbol: storeDATA
   Definitions
      At line 93 in file Term_project.s
   Uses
      At line 97 in file Term_project.s
Comment: storeDATA used once
storeINDEX 000000F8

Symbol: storeINDEX
   Definitions
      At line 101 in file Term_project.s
   Uses
      At line 105 in file Term_project.s
Comment: storeINDEX used once
subcase 00000240

Symbol: subcase
   Definitions
      At line 215 in file Term_project.s
   Uses
      At line 206 in file Term_project.s
Comment: subcase used once
term_project 00000000

Symbol: term_project
   Definitions
      At line 1 in file Term_project.s
   Uses
      None
Comment: term_project unused
20 symbols



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

354 symbols in table
